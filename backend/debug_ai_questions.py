#!/usr/bin/env python3
"""
Debug AI Question Generation
"""
from ai_quiz_generator import AIQuizGenerator
from registration_backend import EnhancedQuizGenerator

def debug_ai_questions():
    """Debug AI question generation to identify issues"""
    print("üîç DEBUGGING AI QUESTION GENERATION")
    print("=" * 60)
    
    # Test AI Generator
    print("\nü§ñ AI GENERATOR OUTPUT:")
    print("-" * 40)
    ai_generator = AIQuizGenerator()
    
    questions = ai_generator.generate_quiz_with_ai(
        "Python Programming", "medium", 3, "huggingface"
    )
    
    if questions:
        print(f"‚úÖ Generated {len(questions)} questions")
        for i, q in enumerate(questions, 1):
            print(f"\nüìù QUESTION {i}:")
            print(f"Text: {q.question_text}")
            print(f"Options: {q.options}")
            print(f"Correct Answer: {q.correct_answer}")
            print(f"Explanation: {q.explanation}")
            print(f"Difficulty: {q.difficulty}")
            print(f"Points: {q.points}")
            print("-" * 40)
    else:
        print("‚ùå No questions generated by AI")
    
    # Test Enhanced Generator for comparison
    print("\nüìö ENHANCED GENERATOR OUTPUT:")
    print("-" * 40)
    enhanced_generator = EnhancedQuizGenerator()
    
    template_questions = enhanced_generator.generate_questions(
        "Python Programming", "medium", 3
    )
    
    if template_questions:
        print(f"‚úÖ Generated {len(template_questions)} questions")
        for i, q in enumerate(template_questions, 1):
            print(f"\nüìù QUESTION {i}:")
            print(f"Text: {q['question_text']}")
            print(f"Options: {q['options']}")
            print(f"Correct Answer: {q['correct_answer']}")
            print(f"Explanation: {q['explanation']}")
            print(f"Difficulty: {q['difficulty']}")
            print(f"Points: {q['points']}")
            print("-" * 40)
    else:
        print("‚ùå No questions generated by Enhanced Generator")

def test_different_subjects():
    """Test AI generation with different subjects"""
    print("\nüß™ TESTING DIFFERENT SUBJECTS:")
    print("=" * 60)
    
    subjects = ["Python Programming", "JavaScript", "Mathematics", "Web Development"]
    ai_generator = AIQuizGenerator()
    
    for subject in subjects:
        print(f"\nüìñ Subject: {subject}")
        print("-" * 30)
        
        questions = ai_generator.generate_quiz_with_ai(
            subject, "medium", 1, "huggingface"
        )
        
        if questions:
            q = questions[0]
            print(f"Question: {q.question_text}")
            print(f"Options: {q.options}")
            print(f"Correct: {q.correct_answer}")
        else:
            print("No questions generated")

if __name__ == "__main__":
    debug_ai_questions()
    test_different_subjects()
